const questions = [
    {
        question: "–í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è —ç–Ω–µ—Ä–≥–∏—á–Ω–µ–µ –ø–æ—Å–ª–µ –æ–±—â–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏?",
        answers: [
            { text: "–î–∞", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í–∞–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ?",
        answers: [
            { text: "–î–∞", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –¥—É–º–∞—Ç—å –ø—Ä–µ–∂–¥–µ, —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç—å?",
        answers: [
            { text: "–î–∞", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã –ª—é–±–∏—Ç–µ –±—ã—Ç—å –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–Ω–∏–º–∞–Ω–∏—è?",
        answers: [
            { text: "–î–∞", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã –±—ã—Å—Ç—Ä–µ–µ –∑–∞—Ä—è–∂–∞–µ—Ç–µ—Å—å —ç–Ω–µ—Ä–≥–∏–µ–π –Ω–∞–µ–¥–∏–Ω–µ –∏–ª–∏ —Å –¥—Ä—É–≥–∏–º–∏?",
        answers: [
            { text: "–ù–∞–µ–¥–∏–Ω–µ", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–° –¥—Ä—É–≥–∏–º–∏", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ –∏–ª–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ?",
        answers: [
            { text: "–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–í –∫–æ–º–∞–Ω–¥–µ", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã —á–∞—Å—Ç–æ –æ–±–¥—É–º—ã–≤–∞–µ—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø—Ä–µ–∂–¥–µ —á–µ–º –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å?",
        answers: [
            { text: "–î–∞", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è –Ω–µ–∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –≤ –±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö?",
        answers: [
            { text: "–î–∞", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–í—ã –ª—é–±–∏—Ç–µ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ —Å –¥—Ä—É–∑—å—è–º–∏?",
        answers: [
            { text: "–î–∞", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" },
            { text: "–ù–µ—Ç", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" }
        ]
    },
    {
        question: "–ü–æ—Å–ª–µ –¥–æ–ª–≥–æ–≥–æ –¥–Ω—è –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ –±—ã:",
        answers: [
            { text: "–ü–æ–±—ã—Ç—å –≤ —Ç–∏—à–∏–Ω–µ –∏ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å", type: "–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç" },
            { text: "–í—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏", type: "—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç" }
        ]
    }
];

const muteBtn = document.getElementById("mute-btn");

function updateMuteButton() {
    muteBtn.textContent = music.muted ? "üîá" : "üîä";
}

muteBtn.addEventListener("click", () => {
    music.muted = !music.muted;
    localStorage.setItem("isMuted", music.muted);
    updateMuteButton();
});



let currentQuestion = parseInt(localStorage.getItem('currentQuestion') || '0');
let scores = JSON.parse(localStorage.getItem('scores')) || { –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç: 0, —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç: 0 };
let userAnswers = JSON.parse(localStorage.getItem('userAnswers')) || [];

const questionContainer = document.getElementById("question-container");
const resultDiv = document.getElementById("result");
const animeGif = document.getElementById("anime-gif");
const progressBar = document.getElementById("progress");
const nextBtn = document.getElementById("next-btn");
const backBtn = document.getElementById("back-btn");


const dancingGirlGifs = [
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/RLJxQtX8Hs7XytaoyX/giphy.gif",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/mJIa7rg9VPEhzU1dyQ/giphy.gif",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/HZboJ5Pkti9k4/giphy.gif",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/NmRBAYeblCnf9MHBX8/giphy.gif",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/11lxCeKo6cHkJy/giphy.gif",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/10YWqUivkQPeeJWD3u/giphy.gif",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExb3FtemFyd3ZwZm80bHM5Z2IxZW41cDNveDExMmF1aG9pNnI0NGs5MCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/JPBRglxTOL1NtkDKJp/giphy.gif",
    "https://media.giphy.com/media/FGPbhxVgMh3rO/giphy.gif?cid=ecf05e47zgeo0gtcm03ecyurkehot8pct925y05wgdylzwn7&ep=v1_gifs_search&rid=giphy.gif&ct=g",
    "https://media.giphy.com/media/13mmPbESdtOFC8/giphy.gif?cid=ecf05e47zgeo0gtcm03ecyurkehot8pct925y05wgdylzwn7&ep=v1_gifs_search&rid=giphy.gif&ct=g",
    "https://media.giphy.com/media/k7J8aS3xpmhpK/giphy.gif?cid=ecf05e47zgeo0gtcm03ecyurkehot8pct925y05wgdylzwn7&ep=v1_gifs_search&rid=giphy.gif&ct=g",
    "https://media.giphy.com/media/a6pzK009rlCak/giphy.gif?cid=ecf05e47zgeo0gtcm03ecyurkehot8pct925y05wgdylzwn7&ep=v1_gifs_search&rid=giphy.gif&ct=g",
    "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExaXQzMm1vejl4M2RobnU0b3ltMTc4ZHhraTYyYjJjZjg5OWIwOHNkMCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/maZHPccdCgVEI/giphy.gif"
];

const narutoGif = "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExMGRpeDlxdzVxZ3pqMmN0cXg3c3AzOHZ3MXJ2amtjMzcxYWdtMm41aiZlcD12MV9naWZzX3NlYXJjaCZjdD1n/8MyXEVgue4ucw/giphy.gif";
const kanekiGif = "https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExbWoxMDdmaDNlZXd4aHkyYWJoa3A0dXFqcHNqNTYzOWRrb3ZsZWJuaCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/8lYUxeF0X2jxpt1ijq/giphy.gif";


function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
}
shuffleArray(dancingGirlGifs);

function showQuestion() {
    const q = questions[currentQuestion];
    questionContainer.innerHTML = `<p>${q.question}</p>`;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–∏—Ñ–∫—É –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
    if (currentQuestion < dancingGirlGifs.length) {
        animeGif.src = dancingGirlGifs[currentQuestion];
    }

    q.answers.forEach(answer => {
        const btn = document.createElement("button");
        btn.textContent = answer.text;
        btn.onclick = () => handleAnswer(answer.type);
        questionContainer.appendChild(btn);
    });
}

preloadGifs([...dancingGirlGifs, narutoGif, kanekiGif]);

function preloadGifs(gifs) {
    gifs.forEach(src => {
        const img = new Image();
        img.src = src;
    });
}

function saveProgress() {
    localStorage.setItem('currentQuestion', currentQuestion);
    localStorage.setItem('scores', JSON.stringify(scores));
    localStorage.setItem('userAnswers', JSON.stringify(userAnswers));
}

function showQuestion() {
    const q = questions[currentQuestion];
    questionContainer.innerHTML = `<p>${q.question}</p>`;
    progressBar.textContent = `–í–æ–ø—Ä–æ—Å ${currentQuestion + 1} –∏–∑ ${questions.length}`;

    animeGif.src = dancingGirlGifs[currentQuestion % dancingGirlGifs.length];

    if (q.scale) {
        const scaleContainer = document.createElement("div");
        scaleContainer.className = "scale-input";
        for (let i = 1; i <= 5; i++) {
            const input = document.createElement("input");
            input.type = "button";
            input.value = i;
            input.onclick = () => handleAnswer(q.type, i);
            scaleContainer.appendChild(input);
        }
        questionContainer.appendChild(scaleContainer);
    } else {
        q.answers.forEach(answer => {
            const btn = document.createElement("button");
            btn.textContent = answer.text;
            btn.onclick = () => handleAnswer(answer.type);
            questionContainer.appendChild(btn);
        });
    }

    backBtn.classList.toggle("hidden", currentQuestion === 0);
    nextBtn.classList.add("hidden");
    saveProgress();
}

function handleAnswer(type, scaleValue = null) {
    if (scaleValue) {
        scores[type] += scaleValue > 3 ? 1 : 0;
        userAnswers[currentQuestion] = { type, scaleValue };
    } else {
        scores[type]++;
        userAnswers[currentQuestion] = { type };
    }

    currentQuestion++;
    if (currentQuestion < questions.length) {
        showQuestion();
    } else {
        showResult();
    }
    saveProgress();
}

backBtn.onclick = () => {
    if (currentQuestion > 0) {
        currentQuestion--;
        showQuestion();
    }
};

function showResult() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    questionContainer.classList.add("hidden");
    animeGif.classList.remove("hidden");
    resultDiv.classList.remove("hidden");

    const isIntrovert = scores["–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç"] > scores["—ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç"];
    animeGif.src = isIntrovert ? kanekiGif : narutoGif;

    const resultText = isIntrovert
        ? "–í—ã –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç ‚Äî –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ —É–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ."
        : "–í—ã —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç ‚Äî –ø–æ–ª—É—á–∞–µ—Ç–µ —ç–Ω–µ—Ä–≥–∏—é –æ—Ç –æ–±—â–µ–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.";

    resultDiv.innerHTML = `<h2>${resultText}</h2>`;

    // –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö
    localStorage.clear();
    currentQuestion = 0;
    scores = { –∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç: 0, —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç: 0 };
    userAnswers = [];

    // ‚è≥ –ß–µ—Ä–µ–∑ –ø–∞—É–∑—É —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å—ë –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ
    setTimeout(() => {
        resultDiv.classList.add("hidden");
        questionContainer.classList.remove("hidden");
        showQuestion();
    }, 5000); // 5 —Å–µ–∫—É–Ω–¥ –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
}


// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç <audio>
const music = document.getElementById("bg-music");

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ localStorage
const savedMute = localStorage.getItem("isMuted");
if (savedMute !== null) {
    music.muted = savedMute === "true";
}

// –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∑–≤—É–∫–∞
function updateMuteButton() {
    const muteBtn = document.getElementById("mute-btn");
    muteBtn.textContent = music.muted ? "üîá" : "üîä";
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–≤—É–∫–∞
document.getElementById("mute-btn").addEventListener("click", () => {
    music.muted = !music.muted;
    localStorage.setItem("isMuted", music.muted);
    updateMuteButton();
});

// –ó–∞–ø—É—Å–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
document.addEventListener("DOMContentLoaded", () => {
    updateMuteButton();
    setTimeout(() => {
        const playPromise = music.play();
        if (playPromise !== undefined) {
            playPromise.catch(() => {
                console.warn("–§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–æ–º –¥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.");
            });
        }
    }, 100);
});


showQuestion();